An exception occurred during task execution. To see the full traceback, use -vvv. The error was: Invalid bucket name "dev01-39591-abinitio-dev"": Bucket name must match the regex "^[a-zA-Z0-9.\-_]{1,255}$" or be an ARN matching the regex "^arn:(aws).*:s3:[a-z\-0-9]+:[0-9]{12}:accesspoint[/:][a-zA-Z0-9\-]{1,63}$"
fatal: [localhost]: FAILED! => {"boto3_version": "1.17.112", "botocore_version": "1.18.6", "changed": false, "msg": "Failed while looking up bucket (during bucket_check) dev01-39591-abinitio-dev\".: Parameter validation failed:\nInvalid bucket name \"dev01-39591-abinitio-dev\"\": Bucket name must match the regex \"^[a-zA-Z0-9.\\-_]{1,255}$\" or be an ARN matching the regex \"^arn:(aws).*:s3:[a-z\\-0-9]+:[0-9]{12}:accesspoint[/:][a-zA-Z0-9\\-]{1,63}$\""}
//////// ERROR WHILE INSTALLING CC /////
TASK [install_cc : Log m_ls connectivity check result] ************************************************************************************************
fatal: [localhost]: FAILED! => {"msg": "template error while templating string: Unexpected end of template. Jinja was looking for the following tags: 'elif' or 'else' or 'endif'. The innermost block that needs to be closed is 'if'.. String: {%- if ls_test is success -%} - m_ls connectivity test for the Co-Operating System has completed successfully {\n"}

//////// ERROR WHILE INSTALLING CC/////
TASK [install_cc : Install boto3 and botocore] ********************************************************************************************************
fatal: [localhost]: FAILED! => {"msg": "The conditional check 'not (co_ops_dir_status.stat.exists and co_ops_dir_status.stat.isdir | default(false))' failed. The error was: error while evaluating conditional (not (co_ops_dir_status.stat.exists and co_ops_dir_status.stat.isdir | default(false))): 'co_ops_dir_status' is undefined\n\nThe error appears to be in '/tmp/ansible_playbooks/roles/install_cc/tasks/main.yml': line 34, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n- name: Install boto3 and botocore\n  ^ here\n"}

PLAY RECAP ****



TASK [install_cc : Check if Co-Operating System directory exists] *************************************************************************************
fatal: [localhost]: FAILED! => {"msg": "The task includes an option with an undefined variable. The error was: 'install_path' is undefined\n\nThe error appears to be in '/tmp/ansible_playbooks/roles/install_cc/tasks/main.yml': line 17, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n- name: Check if Co-Operating System directory exists\n  ^ here\n"}






TASK [install_cc : Install boto3 and botocore] ********************************************************************************************************
task path: /tmp/ansible_playbooks/roles/install_cc/tasks/main.yml:10
fatal: [localhost]: FAILED! => {
    "msg": "The conditional check 'not (co_ops_dir_status.stat.exists and co_ops_dir_status.stat.isdir | default(false))' failed. The error was: error while evaluating conditional (not (co_ops_dir_status.stat.exists and co_ops_dir_status.stat.isdir | default(false))): 'co_ops_dir_status' is undefined\n\nThe error appears to be in '/tmp/ansible_playbooks/roles/install_cc/tasks/main.yml': line 10, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n- name: Install boto3 and botocore\n  ^ here\n"
}

PLAY RECAP ********************************************************************************************************************************************
localhost                  : ok=2    changed=1    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0




Copy and extract Installer Package from S3] ****************************************************************************************
fatal: [localhost]: FAILED! => {"changed": false, "msg": "Failed to import the required Python library (botocore or boto3) on arcprimary.private-enterprise-dev.arc.travel's Python /usr/bin/python. Please read module documentation and install in the appropriate location. If the required library is installed, but Ansible is using the wrong Python interpreter, please consult the documentation on ansible_python_interpreter"}

PLAY RECAP **********



PLAY RECAP ********************************************************************************************************************************************
localhost                  : ok=3    changed=1    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0


TASK [install_cc : Create CC Install and Deployment directories if they don't exist] ******************************************************************
failed: [localhost] (item=/tmp/abinitio_test/ControlCenter) => {"ansible_loop_var": "item", "changed": false, "item": "/tmp/abinitio_test/ControlCenter", "msg": "There was an issue creating /tmp/abinitio_test/ControlCenter as requested: [Errno 13] Permission denied: b'/tmp/abinitio_test/ControlCenter'", "path": "/tmp/abinitio_test/ControlCenter"}
failed: [localhost] (item=/tmp/abinitio_test/CC_deploy) => {"ansible_loop_var": "item", "changed": false, "item": "/tmp/abinitio_test/CC_deploy", "msg": "There was an issue creating /tmp/abinitio_test/CC_deploy as requested: [Errno 13] Permission denied: b'/tmp/abinitio_test/CC_deploy'", "path": "/tmp/abinitio_test/CC_deploy"}

PLAY RECA



install_cc : Ensure pip is installed] ***********************************************************************************************************
fatal: [localhost]: FAILED! => {"changed": false, "msg": "The Python 2 bindings for rpm are needed for this module. If you require Python 3 support use the `dnf` Ansible module instead.. The Python 2 yum module is needed for this module. If you require Python 3 support use the `dnf` Ansible module instead."}





TASK [install_cc : Creating Control> Center War file] *************************************************************************************************
fatal: [localhost]: FAILED! => {"changed": true, "cmd": "source '/abinitio/apps/env_dev.ksh'\ncc-admin create test_controlcenter\ncc-admin configure -batch true -propFile /tmp/abinitio_test/ControlCenter/setup.properties\n", "delta": "0:00:01.350314", "end": "2024-08-06 13:45:50.110901", "msg": "non-zero return code", "rc": 1, "start": "2024-08-06 13:45:48.760587", "stderr": "stty: standard input: Inappropriate ioctl for device\nls: cannot access *.war: No such file or directory\nls: cannot access *.war: No such file or directory", "stderr_lines": ["stty: standard input: Inappropriate ioctl for device", "ls: cannot access *.war: No such file or directory", "ls: cannot access *.war: No such file or directory"], "stdout": "Creating Control>Center deployment directory: /abinitio/opt/WebProducts/ControlCenter/test_controlcenter\nPlease wait while the installer initializes...\n\nHelp available on:\n    backup\n    create\n    create-physical\n    db-ping\n    digest-reply-import\n    destroy\n    encrypt\n    generate-config\n    install-jdbc-driver\n    job\n    job <action>\n    job-definition\n    job-definition <action>\n    list\n    ping\n    restore\n    set-server-config\n    upgrade\n    verify-schema\n    version", "stdout_lines": ["Creating Control>Center deployment directory: /abinitio/opt/WebProducts/ControlCenter/test_controlcenter", "Please wait while the installer initializes...", "", "Help available on:", "    backup", "    create", "    create-physical", "    db-ping", "    digest-reply-import", "    destroy", "    encrypt", "    generate-config", "    install-jdbc-driver", "    job", "    job <action>", "    job-definition", "    job-definition <action>", "    list", "    ping", "    restore", "    set-server-config", "    upgrade", "    verify-schema", "    version"]}

PLAY RECAP ********************************************************************************************************************************************
localhost  



fatal: [localhost]: FAILED! => {"changed": false, "cmd": "dnf install -y python3-dnf", "msg": "[Errno 2] No such file or directory: b'dnf': b'dnf'", "rc": 2}

